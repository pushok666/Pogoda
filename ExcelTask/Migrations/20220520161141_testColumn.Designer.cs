// <auto-generated />
using System;
using ExcelTask.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExcelTask.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220520161141_testColumn")]
    partial class testColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExcelTask.Models.DateData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Dates", (string)null);
                });

            modelBuilder.Entity("ExcelTask.Models.HourAndData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("AirHumidity")
                        .HasColumnType("real");

                    b.Property<int>("AtmospherePressure")
                        .HasColumnType("integer");

                    b.Property<int>("Cloudiness")
                        .HasColumnType("integer");

                    b.Property<string>("DirectionWind")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("H")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("Hour")
                        .HasColumnType("time without time zone");

                    b.Property<int>("IdDate")
                        .HasColumnType("integer")
                        .HasColumnName("IdDate");

                    b.Property<int>("SpeedWind")
                        .HasColumnType("integer");

                    b.Property<float>("Td")
                        .HasColumnType("real");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<int>("VV")
                        .HasColumnType("integer");

                    b.Property<string>("WeatherConditions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdDate");

                    b.ToTable("Data", (string)null);
                });

            modelBuilder.Entity("ExcelTask.Models.HourAndData", b =>
                {
                    b.HasOne("ExcelTask.Models.DateData", "DateData")
                        .WithMany("HourAndDatas")
                        .HasForeignKey("IdDate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DateData");
                });

            modelBuilder.Entity("ExcelTask.Models.DateData", b =>
                {
                    b.Navigation("HourAndDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
